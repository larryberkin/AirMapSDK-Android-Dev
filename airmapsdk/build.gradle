apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = 'com.airmap.airmapsdk'
def libVersion = '1.0.8'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.0'
    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "$libVersion"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DBUILD_TARGET_ANDROID=TRUE", "-DANDROID_ABI=x86"
            }
        }
        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            abiFilters 'x86'
        }

        manifestPlaceholders = [auth0Domain: "@string/com_auth0_domain", auth0Scheme: "@string/com_auth0_scheme"]
    }

    buildTypes {
        release {
            minifyEnabled false
            crunchPngs true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
    externalNativeBuild {
        cmake {
            path '../../../airmapd/CMakeLists.txt'
        }
    }

    aaptOptions {
        additionalParameters '--utf16' // Allows emoji in XML
    }
}

dependencies {
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:2.10.0"
    testCompile "org.robolectric:robolectric:3.4.2"

    def supportLibraryVersion = '27.0.0'
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$supportLibraryVersion"
    compile "com.android.support:support-annotations:$supportLibraryVersion"
    compile "com.android.support:support-fragment:$supportLibraryVersion"
    compile "com.android.support:support-v13:$supportLibraryVersion"
    compile files('libs/okhttp-3.10.0-SNAPSHOT.jar') // hotfix okhttp version to fix crash on 8.0
    compile 'com.squareup.okio:okio:1.13.0' // hotfix okio version to fix crash on 8.0
    compile 'com.github.bumptech.glide:glide:3.8.0' //Using Glide instead of Picasso because it is more efficient for the app's tutorial images
    compile 'com.google.android.gms:play-services-location:11.4.2'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    compile 'com.nakama.arraypageradapter:arraypageradapter:0.1.1'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'org.bitbucket.b_c:jose4j:0.6.1'
    compile 'com.google.protobuf:protobuf-java:3.4.0'
    compile 'joda-time:joda-time:2.9.9'
    compile 'com.googlecode.libphonenumber:libphonenumber:8.8.2'
    compile('com.mapbox.mapboxsdk:mapbox-android-sdk:5.1.4@aar') { transitive = true }
    compile 'com.github.lzyzsd:jsbridge:1.0.4'
    compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
    compile('org.eclipse.paho:org.eclipse.paho.android.service:1.1.1')
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'online.devliving:securedpreferencestore:0.3.1' // Newer version available, but updating requires making some api changes within our code
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile('com.auth0.android:lock:2.8.0') { exclude module: 'support-v4' }
}

configurations {
    // to avoid double inclusion of support libraries
    all*.exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    all*.exclude group: 'com.android.support', module: 'support-v4'
}

def siteUrl = 'http://www.airmap.com'
def projectName = 'com.airmap.airmapsdk'
def gitUrl = 'https://github.com/airmap/AirMapSDK-Android.git'

bintray {
    user = bintray_user
    key = bintray_api_key
    configurations = ['archives']
    pkg {
        repo = 'maven'
        userOrg = 'airmapio'
        version libVersion
        name = projectName
        desc = 'Create Flights, Send Telemetry Data, Get Realtime Traffic Alerts.'
        licenses = ['MIT']
        labels = ['android', 'airmap', 'drone', 'airspace', 'sdk', 'aar']
        vcsUrl = gitUrl
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            name projectName
            url siteUrl
            licenses {
                license {
                    name 'The MIT License'
                    url 'https://github.com/airmap/AirMapSDK-Android/blob/master/LICENSE'
                }
            }
            developers {
                developer {
                    id 'vanshg'
                    name 'Vansh Gandhi'
                    email 'vansh@airmap.com'
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl

            }
        }.writeTo("$buildDir/pom.xml")
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
